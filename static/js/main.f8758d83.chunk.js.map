{"version":3,"sources":["components/Searchbar/Searchbar.js","components/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["Searchbar","useState","input","setInput","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","e","target","App","state","query","status","page","images","showLoadMore","showModal","error","modalImgUrl","this","formSubmitHandler","handleOpenModal","handleCloseModal","onSubmit","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kTAOe,SAASA,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,wBAAQC,UAAWC,IAAEL,UAArB,SACE,uBACEI,UAAWC,IAAEC,WADf,UAIE,wBAAQC,KAAK,SAASH,UAAWC,IAAEG,iBAAnC,SACE,sBAAMJ,UAAWC,IAAEI,sBAAnB,sBAGF,uBACEL,UAAWC,IAAEK,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOZ,EACPa,SAvBkB,SAACC,GACzB,IAAQF,EAAUE,EAAEC,OAAZH,MAERX,EAASW,W,ICkIEI,E,4MApIbC,MAAQ,CACNC,MAAO,GACPC,OAAQ,OACRC,KAAM,EACNC,OAAQ,GACRC,cAAc,EACdC,WAAW,EACXC,MAAO,KACPC,YAAa,I,4CA0Ef,WACE,MAA0DC,KAAKT,MAA/CE,GAAhB,EAAQE,OAAR,EAAgBF,QACRQ,GADR,EAAwBH,MAAxB,EAA+BD,UAA/B,EAA0CE,YACuBC,KAAzDC,mBAAyDD,KAAtCE,gBAAsCF,KAArBG,iBAE5C,MAAe,SAAXV,GASW,YAAXA,GASW,aAAXA,GAUW,aAAXA,EA1BA,mCACE,cAACrB,EAAD,CAAWgC,SAAUH,WAyB3B,M,GAnHcI,aCLlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,sC","file":"static/js/main.f8758d83.chunk.js","sourcesContent":["import { useState } from \"react\";\n// import { toast } from \"react-toastify\";\n// import PropTypes from \"prop-types\";\n\n// import \"react-toastify/dist/ReactToastify.css\";\nimport s from \"./Searchbar.module.css\";\n\nexport default function Searchbar() {\n  const [input, setInput] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { value } = e.target;\n\n    setInput(value);\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form\n        className={s.SearchForm}\n        //onSubmit={handleSubmit}\n      >\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={input}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n","import React, { Component } from \"react\";\nimport imageGalleryApi from \"../services/image-gallery-api\";\n\nimport Searchbar from \"./Searchbar\";\n// import ImageGallery from \"./ImageGallery\";\n// import GalleryLoader from \"./GalleryLoader\";\n// import QueryError from \"./QueryError\";\n// import Modal from \"./Modal\";\n// import Button from \"./Button\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    status: \"idle\",\n    page: 1,\n    images: [],\n    showLoadMore: false,\n    showModal: false,\n    error: null,\n    modalImgUrl: \"\",\n  };\n\n  //   componentDidUpdate(prevProps, prevState) {\n  //     if (prevState.query !== this.state.query) {\n  //       this.setState({\n  //         status: \"pending\",\n  //         page: 1,\n  //         images: [],\n  //       });\n\n  //       const { query, page } = this.state;\n\n  //       this.handleFetchImages(query, page);\n  //     }\n  //   }\n\n  //   handleFetchImages = (query, page) => {\n  //     imageGalleryApi\n  //       .fetchImages(query, page)\n  //       .then(({ hits }) => {\n  //         if (hits.length < 12) {\n  //           this.setState({\n  //             showLoadMore: false,\n  //           });\n  //         }\n\n  //         this.setState((prevState) => ({\n  //           images: [...prevState.images, ...hits],\n  //           status: \"resolved\",\n  //           page: prevState.page + 1,\n  //           showLoadMore: true,\n  //         }));\n  //       })\n  //       .catch((error) =>\n  //         this.setState({\n  //           error,\n  //           status: \"rejected\",\n  //         })\n  //       )\n  //       .finally(() => {\n  //         this.handleScrollDown();\n  //       });\n  //   };\n\n  //   formSubmitHandler = (inputValue) => {\n  //     this.setState({ query: inputValue });\n  //   };\n\n  //   handleOpenModal = (largeImageURL) => {\n  //     this.setState({\n  //       modalImgUrl: largeImageURL,\n  //       showModal: true,\n  //     });\n  //   };\n\n  //   handleCloseModal = () => {\n  //     this.setState({\n  //       showModal: false,\n  //     });\n  //   };\n\n  //   handleLoadMore = () => {\n  //     const { query, page } = this.state;\n  //     this.handleFetchImages(query, page);\n  //   };\n\n  //   handleScrollDown = () => {\n  //     window.scrollTo({\n  //       top: document.documentElement.scrollHeight,\n  //       behavior: \"smooth\",\n  //     });\n  //   };\n\n  render() {\n    const { images, status, error, showModal, modalImgUrl } = this.state;\n    const { formSubmitHandler, handleOpenModal, handleCloseModal } = this;\n\n    if (status === \"idle\") {\n      return (\n        <>\n          <Searchbar onSubmit={formSubmitHandler} />\n          {/* <ToastContainer autoClose={3000} /> */}\n        </>\n      );\n    }\n\n    if (status === \"pending\") {\n      return (\n        <>\n          <Searchbar onSubmit={formSubmitHandler} />\n          {/* <GalleryLoader /> */}\n        </>\n      );\n    }\n\n    if (status === \"rejected\") {\n      return (\n        <>\n          <Searchbar onSubmit={formSubmitHandler} />\n          {/* <QueryError queryError={error} /> */}\n          {/* <ToastContainer autoClose={3000} /> */}\n        </>\n      );\n    }\n\n    if (status === \"resolved\") {\n      return (\n        <>\n          <Searchbar onSubmit={formSubmitHandler} />\n          {/* <ImageGallery images={images} onClick={handleOpenModal} />\n          {showModal && (\n            <Modal onClose={handleCloseModal}>\n              <img src={modalImgUrl} alt=\"\" />\n            </Modal>\n          )}\n          <Button onClick={this.handleLoadMore} /> */}\n          {/* <ToastContainer autoClose={3000} /> */}\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__7_w2I\",\"SearchForm\":\"Searchbar_SearchForm__2ywHL\",\"SearchFormButton\":\"Searchbar_SearchFormButton__TmiYR\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3rxrN\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2EdJf\"};"],"sourceRoot":""}